basePath: /
definitions:
  main.Item:
    properties:
      id:
        example: "1"
        type: string
      name:
        example: Item One
        type: string
      price:
        example: 10
        type: number
    type: object
host: localhost:8000
info:
  contact: {}
  description: This is a sample server for items.
  title: Item API
  version: "1.0"
paths:
  /items:
    get:
      consumes:
      - application/json
      description: Get all items
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Item'
            type: array
      security:
      - BearerAuth: []
      summary: Get all items
      tags:
      - items
    post:
      consumes:
      - application/json
      description: Create a new item
      parameters:
      - description: New Item
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/main.Item'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Item'
      security:
      - BearerAuth: []
      summary: Create a new item
      tags:
      - items
  /items/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an item
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete an item
      tags:
      - items
    get:
      consumes:
      - application/json
      description: Get an item by ID
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Item'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get an item by ID
      tags:
      - items
    put:
      consumes:
      - application/json
      description: Update an item
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated Item
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/main.Item'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Item'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update an item
      tags:
      - items
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
